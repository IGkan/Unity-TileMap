//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tower
{
    using QF;
    using QF.Action;
    using QF.Extensions;
    using QF.Res;
    using QFramework;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UniRx;
    using UnityEngine;
    using UnityEngine.SceneManagement;
    using UnityEngine.UI;


    public class MyMotaUIHomePanelData : QFramework.UIPanelData
    {
    }

    public partial class MyMotaUIHomePanel : QFramework.UIPanel
    {

        protected override void ProcessMsg(int eventId, QFramework.QMsg msg)
        {
            throw new System.NotImplementedException();
        }

        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as MyMotaUIHomePanelData ?? new MyMotaUIHomePanelData();

            SendMsg(new AudioMsgWithBool((ushort)AudioEvent.MusicSwitch, true));
            SendMsg(new AudioMusicMsg("start"));
        }

        protected override void RegisterUIEvent()
        {
            SpeedSlider.onValueChanged.AddListener((value)=>
            {
                float pencent = (value - 1) / (3 - 1);
                PlayerData.Instance.MoveSpeed.Value = Convert.ToSingle(0.3 - 0.2 * pencent);
              
            });

            BtnStart.onClick.AddListener(() =>
            {
                if (transform.parent.childCount == 2)
                {
                    GameObject.Find("GameScenePrefab(Clone)").GetComponent<GameScenePrefab>().SetActiveAll();
                }
                if(transform.parent.childCount == 1)
                {
                    UIMgr.OpenPanel<MyMotaUIGamePanel>();

                }
                PlayerData.Instance.InitPlayerData();
                CloseSelf();
                SendMsg(new AudioMusicMsg("bg"));
            });

            BtnReload.onClick.AddListener(() =>
            {
<<<<<<< HEAD
<<<<<<< HEAD
               mData.Model = mData.Model.LoadPlayerData();

=======

                //// 这里可能判断 MyMotaUIGamePanel 是否已打开
                //// 判断以前有没有打开过游戏 如果没有打开过游戏初始化一下数据
                //if (PlayerData.Instance.NewGame.Value)
                //{
                //    PlayerData.Instance.InitPlayerData();
                //}
>>>>>>> 8207420c391999537d5f8dbc19fe02f937f6ba2d
=======
                // 这里可能判断 MyMotaUIGamePanel 是否已打开
                // 判断以前有没有打开过游戏 如果没有打开过游戏初始化一下数据
                if (PlayerData.Instance.NewGame.Value)
                {
                    PlayerData.Instance.InitPlayerData();
                  

                }
>>>>>>> parent of b1f25529... 11.27

                // 如果玩家一直在游戏中 只需要打开设置界面 不需要重新加载数据
                if (transform.parent.childCount == 1)
                {
<<<<<<< HEAD
<<<<<<< HEAD
                    UIMgr.OpenPanel<MyMotaUIGamePanel>(new MyMotaUIGamePanelData()
                    {
                        Model = mData.Model
                    });
                    mData.Model.LoadTileData();
                    mData.Model.CurrntFloor.Value = 1;

=======
                    PlayerData.Instance.CurrntFloor.Value = 1;
                    UIMgr.OpenPanel<MyMotaUIGamePanel>();
                    PlayerData.Instance.LoadPlayerData();
>>>>>>> 8207420c391999537d5f8dbc19fe02f937f6ba2d
=======
                    PlayerData.Instance.CurrntFloor.Value = 1;
                    UIMgr.OpenPanel<MyMotaUIGamePanel>();
                    //PlayerData.Instance.LoadPlayerData();
>>>>>>> parent of b1f25529... 11.27
                }
                if(transform.parent.childCount > 1)
                {
                    SendMsg(new AudioMusicMsg("bg"));
                }
                CloseSelf();


            });
            BtnSetting.onClick.AddListener(() =>
            {
                SettingPanel.gameObject.SetActive(!SettingPanel.gameObject.activeSelf);
            });
            BtnAbout.onClick.AddListener(() =>
            {
                AboutPanel.gameObject.SetActive(!AboutPanel.gameObject.activeSelf);
            });
            BtnQuit.onClick.AddListener(() =>
            {
                Application.Quit();
            });

        }
        protected override void OnOpen(QFramework.IUIData uiData)
        {
        }

        protected override void OnShow()
        {
            float pencent = Convert.ToSingle((0.3 - PlayerData.Instance.MoveSpeed.Value) / 0.2);
            SpeedSlider.value = 1+ 2 * pencent;
        }

        protected override void OnHide()
        {
        }

        protected override void OnClose()
        {
        }
    }
}
